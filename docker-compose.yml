version: '2.3'

services:
  cactus.postgres:
    container_name: cactus_postgres
    image: postgres:9.6.15-alpine
    command: --shared_buffers=384MB --max_connections=3000
    environment:
      POSTGRES_PASSWORD: "secret"
      POSTGRES_DB: "cactus_app"
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "postgres"]
      interval: 10s
      timeout: 5s
      retries: 10
    ports: ['5432:5432']

  cactus.pgadmin:
    container_name: cactus_pgadmin
    image: fenglc/pgadmin4:2.1-python2.7-alpine
    environment:
      DEFAULT_USER: "postgres"
      DEFAULT_PASSWORD: "secret"
    ports: ['5050:5050']
    links:
      - cactus.postgres

  cactus.admin:
    container_name: cactus_admin
    build:
      ./admin
    volumes:
      - ./admin:/code
    environment:
      ENV: "development"
      DJANGO_ADMIN_USER: admin
      DJANGO_ADMIN_PASSWORD: "pass1234"
      DEBUG: "True" # Or "False"
    healthcheck:
      test: ["CMD",  "curl", "-I", "--fail", "http://localhost:8000/admin"]
      timeout: 6s
      retries: 10
    ports: ['6500:8000']
    links:
      - cactus.postgres
    depends_on:
      cactus.postgres:
        condition: service_healthy

  cactus.bff:
    container_name: cactus_bff
    build:
      ./bff
    volumes:
      - ./bff:/go/src/app
    links:
      - cactus.core
    depends_on:
      cactus.core:
        condition: service_healthy
    ports: ['4000:3000']
    environment:
      CACTUS_CORE_URL: "cactus.core:9040"
    healthcheck:
      test: ["CMD",  "curl", "-I", "--fail", "http://localhost:3000/"]
      interval: 10s
      timeout: 6s
      retries: 20

  cactus.core:
    container_name: cactus_core
    build:
      ./core
    volumes:
      - ./core:/go/src/app
    links:
      - cactus.postgres
    ports: ['9040:9040']
    environment:
      DB_HOST: "cactus.postgres"
      DB_NAME: "cactus_app"
      DB_USERNAME: "postgres"
      DB_PASSWORD: "secret"
    healthcheck:
      # /go/bin/grpc-health-probe -addr=localhost:9040 -connect-timeout 250ms -rpc-timeout 100ms
      test: ["CMD", "/go/bin/grpc-health-probe", "-addr=localhost:9040", "-connect-timeout","250ms", "-rpc-timeout","100ms"]
      interval: 10s
      timeout: 5s
      retries: 10
    depends_on:
      cactus.postgres:
        condition: service_healthy
  
  cactus.client:
    container_name: cactus_client
    build:
      ./client
    volumes:
      - ./client:/app
    ports: ['5000:3000']
    environment:
      # Name of this service
      SERVICE_NAME: "cactus_client"

      # Logger service URL
      LOGGER_SERVICE_HOST: "http://cactus.logger:5341/"

      # URL of the service that is running a backend instance
      BFF_SERVICE_URL: "http://cactus.bff:3000/q"

      # URL of the local image cdn service
      IMG_CDN_SERVICE_URL: "http://cactus.img_cdn:80/"

      # URL of the local video cdn service
      VIDEO_CDN_SERVICE_URL: "http://cactus.video_cdn:80/live/"
    links:
      - cactus.bff
      - cactus.img_cdn
      - cactus.video_cdn
      - cactus.logger
    depends_on:
      cactus.bff:
        condition: service_healthy
  
  cactus.img_cdn: # Local image CDN service
    container_name: cactus_img_cdn
    build:
      ./image-cdn
    volumes:
      - ./image-cdn/images:/var/www
    ports: ['8000:80']
  
  cactus.video_cdn: # Local video CDN service
    container_name: cactus_video_cdn
    build:
      ./video-cdn
    volumes:
      - ./video-cdn/videos/:/var/www/hls/live
    ports: ['9000:80', '1935:1935']
  
  cactus.logger: # Local video CDN service
    container_name: cactus_logger
    image: datalust/seq:5
    # volumes:
    #   - ./video-cdn/videos/:/var/www/hls/live
    environment:
      ACCEPT_EULA: "Y"
    ports: ['4040:80', '5341:5341']
