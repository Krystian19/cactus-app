version: '2.3'

services:
  cactus.mariadb:
    container_name: cactus_mariadb
    image: bitnami/mariadb:10.3-ol-7
    environment:
      MARIADB_ROOT_PASSWORD: "secret"
      MARIADB_DATABASE: "cactus_app"
      MARIADB_EXTRA_FLAGS: '--character-set-server=utf8 --collation-server=utf8_general_ci --max-connect-errors=1500 --max_connections=3000'
    healthcheck:
      test: ["CMD", "mysqladmin" ,"ping", "--silent", "-h", "localhost"]
      timeout: 6s
      retries: 10
    ports: ['3306:3306']

  cactus.phpmyadmin:
    container_name: cactus_phpmyadmin
    image: phpmyadmin/phpmyadmin:4.8
    environment:
      MARIADB_ROOT_PASSWORD: "secret"
      PMA_HOST: "cactus.mariadb"
      PMA_PORT: "3306"
    ports: ['8080:80']
    links:
      - cactus.mariadb

  cactus.backend.admin:
    container_name: cactus_backend_admin
    build:
      ./backend_admin
    volumes:
      - ./backend_admin:/code
    environment:
      ENV: "development"
      DJANGO_ADMIN_USER: admin
      DJANGO_ADMIN_PASSWORD: "pass1234"
      DEBUG: "True" # Or "False"
    healthcheck:
      # test: ["CMD", "mysqladmin" ,"ping", "-h", "localhost"]
      test: ["CMD",  "curl", "-I", "--fail", "http://localhost:8000/admin"]
      timeout: 6s
      retries: 10
    ports: ['6500:8000']
    links:
      - cactus.mariadb
    depends_on:
      cactus.mariadb:
        condition: service_started
      cactus.mariadb:
        condition: service_healthy

  cactus.backend:
    container_name: cactus_backend
    build:
      ./backend
    volumes:
      - ./backend:/app
    environment:
      ENV: "development"
      PORT: "3000"
      DB_HOST: "cactus.mariadb"
      DB_NAME: "cactus_app"
      DB_USERNAME: "root"
      DB_PASSWORD: "secret"
      DB_FORCE_RESTART: "false"
      
      # Name of this service
      SERVICE_NAME: "cactus_backend"

      # Logger service URL
      LOGGER_SERVICE_HOST: "http://cactus.logger:5341/"

      # URL of the service that is running a backend instance
      BACKEND_SERVICE_URL: "http://cactus.backend.admin:8000/"

    ports: ['3000:3000']
    links:
      - cactus.mariadb
      - cactus.backend.admin
    depends_on:
      cactus.mariadb:
        condition: service_started
      cactus.mariadb:
        condition: service_healthy
      cactus.backend.admin:
        condition: service_started
      cactus.backend.admin:
        condition: service_healthy

  cactus.bff:
    container_name: cactus_bff
    build:
      ./bff
    volumes:
      - ./bff:/go/src/app
    links:
      - cactus.core
    depends_on:
      - cactus.core
    ports: ['4000:3000']
    environment:
      CACTUS_CORE_URL: "cactus.core:9040"

  cactus.core:
    container_name: cactus_core
    build:
      ./core
    volumes:
      - ./core:/go/src/app
    links:
      - cactus.core
    depends_on:
      - cactus.core
    ports: ['9040:9040']
    environment:
      DB_HOST: "cactus.mariadb"
      DB_NAME: "cactus_app"
      DB_USERNAME: "root"
      DB_PASSWORD: "secret"
    links:
      - cactus.mariadb
    depends_on:
      cactus.mariadb:
        condition: service_started
      cactus.mariadb:
        condition: service_healthy
  
  cactus.client:
    container_name: cactus_client
    build:
      ./client
    volumes:
      - ./client:/app
    ports: ['5000:3000']
    environment:
      # Name of this service
      SERVICE_NAME: "cactus_client"

      # Logger service URL
      LOGGER_SERVICE_HOST: "http://cactus.logger:5341/"

      # URL of the service that is running a backend instance
      BACKEND_SERVICE_URL: "http://cactus.backend:3000/"

      # URL of the local image cdn service
      IMG_CDN_SERVICE_URL: "http://cactus.img_cdn:80/"

      # URL of the local video cdn service
      VIDEO_CDN_SERVICE_URL: "http://cactus.video_cdn:80/live/"
    links:
      - cactus.backend
      - cactus.img_cdn
      - cactus.video_cdn
      - cactus.logger
    depends_on:
      - cactus.backend
      - cactus.img_cdn
      - cactus.video_cdn
      - cactus.logger
  
  cactus.img_cdn: # Local image CDN service
    container_name: cactus_img_cdn
    build:
      ./image-cdn
    volumes:
      - ./image-cdn/images:/var/www
    ports: ['8000:80']
  
  cactus.video_cdn: # Local video CDN service
    container_name: cactus_video_cdn
    build:
      ./video-cdn
    volumes:
      - ./video-cdn/videos/:/var/www/hls/live
    ports: ['9000:80', '1935:1935']
  
  cactus.logger: # Local video CDN service
    container_name: cactus_logger
    image: datalust/seq:5
    # volumes:
    #   - ./video-cdn/videos/:/var/www/hls/live
    environment:
      ACCEPT_EULA: "Y"
    ports: ['4040:80', '5341:5341']
